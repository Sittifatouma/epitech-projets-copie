version: "3.7"
services:

  frontend:
    build: ./frontend
    container_name: webFrontend
    volumes:
      - ./frontend:/app
    ports:
      - 3000:3000
    depends_on:
      - back
    networks:
      web_network:

  back:
    build:
        context: .
        dockerfile: ./back/Dockerfile
    container_name: webBackend
    restart: unless-stopped
    volumes:
        - ./back:/app/back  
    working_dir: /app/back
    environment:
        - SPRING_DATASOURCE_URL=${BACK_DB_URL}
        - SPRING_DATASOURCE_USERNAME=${DB_USER}
        - SPRING_DATASOURCE_PASSWORD=${DB_PASS}
        - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
        - "${BACK_PORT}:8080"
    depends_on:
        db_web:
            condition: service_healthy
    networks:
        web_network:

  db_web:
    image: postgres
    ports:
        - "${DB_PORT}:5432"
    volumes:
        - web_volume:/var/lib/postgresql/data
    environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASS}
        - POSTGRES_DB=${DB_NAME}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
    networks:
        web_network:

volumes:
    web_volume:

networks:
    web_network:
