# name: Lint & Build

# on:
#   pull_request:
#     types: [ opened, reopened, synchronize ]
#   push:
#     branches:
#       - master

# jobs:
#   lint_build:
#     name: 'Lint & Build: ${{matrix.name}}'
#     runs-on: ubuntu-20.04
#     strategy:
#       matrix:
#         include:
#           - path: 'back'
#             name: 'Back'
#           - path: 'front'
#             name: 'Front'

#     steps:
#       # Setup job
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Setup Node.js environment
#         uses: actions/setup-node@v2
#         with:
#           node-version: '14'

#       - name: Node modules cache
#         uses: actions/cache@v2
#         env:
#           cache-name: cache-node-modules
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys:
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-


#           # Setup dependencies
#       - name: Install packages
#         working-directory: ${{matrix.path}}
#         run: npm ci

#       # Lint code
#       - name: Lint code
#         working-directory: ${{matrix.path}}
#         run: npm run lint

#       # Build code
#       - name: Build code
#         working-directory: ${{matrix.path}}
#         run: npm run build --if-present

name: Lint & Build

on:
  push:
    branches:
      - master

jobs:
  lint_build:
    name: 'Lint & Build: ${{matrix.name}}'
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint code back
        working-directory: 'back'
        run: npm install && npm run lint
      - name: Lint code front
        working-directory: 'front'
        run: npm install && npm run lint
      - name: test docker-compose
        run: docker-compose build && docker-compose --env-file .env up -d && docker-compose down
      - name: deploy on VPS
        uses: appleboy/ssh-action@master
        with:
          host: 51.210.40.154
          username: ubuntu
          password: 3T8jRU6EvSTX
          script:
            cd T-WEB-700-T-WEB-700_msc2023_group-10 &&
            git checkout back/config &&
            git pull origin master &&
            cp ../back_config/* back/config &&
            sudo docker-compose down &&
            sudo docker-compose build &&
            sudo docker-compose --env-file .env up -d